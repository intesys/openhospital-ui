"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const body_parser_1 = __importDefault(require("body-parser"));
const cors_1 = __importDefault(require("cors"));
const express_1 = __importDefault(require("express"));
const getPrefix_1 = __importDefault(require("./lib/getPrefix"));
const globals_1 = require("./lib/globals");
const load_1 = __importDefault(require("./lib/load"));
const openApiSchemaValidate_1 = __importDefault(require("./lib/openApiSchemaValidate"));
const handleErrors_1 = __importDefault(require("./middlewares/handleErrors"));
const sendBody_1 = __importDefault(require("./middlewares/sendBody"));
const routes_1 = __importDefault(require("./routes"));
const router = () => __awaiter(this, void 0, void 0, function* () {
    const router = express_1.default.Router();
    try {
        const prefix = getPrefix_1.default(globals_1.API_PREFIX);
        const spec = yield load_1.default(globals_1.API_YML);
        openApiSchemaValidate_1.default(spec);
        router.options("*", cors_1.default());
        router.use(cors_1.default({ credentials: true }), body_parser_1.default.urlencoded({ extended: false }), body_parser_1.default.json());
        router.use(prefix, routes_1.default(spec), sendBody_1.default(), handleErrors_1.default());
    }
    catch (err) {
        console.error(err);
        process.exit(1);
    }
    return router;
});
exports.default = router;
//# sourceMappingURL=router.js.map