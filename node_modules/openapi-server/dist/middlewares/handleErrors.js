"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const log_1 = require("../lib/log");
const util_1 = require("util");
const proxy_1 = require("../lib/proxy");
exports.default = () => (err, req, res, next) => {
    if (err) {
        if (err instanceof proxy_1.RemoteError) {
            return handleRemoteError(err, req, res, next);
        }
        return handleLocalError(err, req, res, next);
    }
    return next(err);
};
const handleRemoteError = (err, req, res) => {
    const { error } = err;
    const { data, headers, status } = error;
    log_1.error({
        Request: `${req.method.toUpperCase()} ${req.originalUrl}`,
        Status: status,
        Source: err.source,
        Headers: headers,
        Error: data
    });
    const statusCode = error.status || res.statusCode || 500;
    res.set(headers);
    res.status(statusCode);
    return res.send(data);
};
const handleLocalError = (err, req, res) => {
    log_1.error({
        Request: `${req.method.toUpperCase()} ${req.originalUrl}`,
        Error: err
    });
    const error = formatError(err);
    const status = error.status || res.statusCode || 500;
    res.status(status);
    return res.send(error.message);
};
const formatError = (err) => {
    if (!err.message) {
        err.message = stringify(err);
    }
    if (!err.status && err.Status) {
        err.status = err.Status;
    }
    return err;
};
const stringify = (obj) => {
    return util_1.inspect(obj, {
        colors: false,
        compact: false,
        breakLength: Infinity
    });
};
//# sourceMappingURL=handleErrors.js.map