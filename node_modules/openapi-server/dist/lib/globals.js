"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const lodash_1 = require("lodash");
const config_1 = require("../config");
const findInCwd_1 = require("./findInCwd");
const getPort_1 = __importDefault(require("./getPort"));
const getPrefix_1 = __importDefault(require("./getPrefix"));
const toBoolean_1 = require("./toBoolean");
require("./env");
const env = lodash_1.pick(process.env, config_1.options);
const globals = toBoolean_1.fixBooleans(Object.assign({}, config_1.defaults, env), config_1.booleans);
const exitWithError = (message, code = 1) => {
    const err = new Error(message);
    console.error(err);
    process.exit(code);
    return ""; // for typescript compliance only
};
// MOCKS_PATH and API_YML must be absolute paths
globals.MOCKS_PATH =
    findInCwd_1.findDirInCwd(globals.MOCKS_PATH) ||
        exitWithError(`Directory not found: ${globals.MOCKS_PATH}`);
globals.API_YML =
    findInCwd_1.findFileInCwd(globals.API_YML) ||
        exitWithError(`File not found: ${globals.API_YML}`);
const { API_YML, API_PREFIX, API_PORT, API_PROTOCOL, API_HOSTNAME, RESOURCES_PREFIX, MOCKS_PATH, PROXY_PROTOCOL, PROXY_HOSTNAME, PROXY_PORT, PROXY_PREFIX, PROXY_RESOURCES_PREFIX, SKIP_VALIDATION, LOG, WATCH } = globals;
exports.API_YML = API_YML;
exports.API_PREFIX = API_PREFIX;
exports.API_PORT = API_PORT;
exports.API_PROTOCOL = API_PROTOCOL;
exports.API_HOSTNAME = API_HOSTNAME;
exports.RESOURCES_PREFIX = RESOURCES_PREFIX;
exports.MOCKS_PATH = MOCKS_PATH;
exports.PROXY_PROTOCOL = PROXY_PROTOCOL;
exports.PROXY_HOSTNAME = PROXY_HOSTNAME;
exports.PROXY_PORT = PROXY_PORT;
exports.PROXY_PREFIX = PROXY_PREFIX;
exports.PROXY_RESOURCES_PREFIX = PROXY_RESOURCES_PREFIX;
exports.SKIP_VALIDATION = SKIP_VALIDATION;
exports.LOG = LOG;
exports.WATCH = WATCH;
const port = getPort_1.default(PROXY_PORT);
const prefix = getPrefix_1.default(PROXY_PREFIX);
exports.proxyUrl = `${PROXY_PROTOCOL}://${PROXY_HOSTNAME}${port}${prefix}`;
//# sourceMappingURL=globals.js.map