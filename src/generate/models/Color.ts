// tslint:disable
/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ColorSpace,
    ColorSpaceFromJSON,
    ColorSpaceToJSON,
} from './';

/**
 * 
 * @export
 * @interface Color
 */
export interface Color {
    /**
     * 
     * @type {number}
     * @memberof Color
     */
    alpha?: number;
    /**
     * 
     * @type {number}
     * @memberof Color
     */
    blue?: number;
    /**
     * 
     * @type {ColorSpace}
     * @memberof Color
     */
    colorSpace?: ColorSpace;
    /**
     * 
     * @type {number}
     * @memberof Color
     */
    green?: number;
    /**
     * 
     * @type {number}
     * @memberof Color
     */
    red?: number;
    /**
     * 
     * @type {number}
     * @memberof Color
     */
    rgb?: number;
    /**
     * 
     * @type {number}
     * @memberof Color
     */
    transparency?: number;
}

export function ColorFromJSON(json: any): Color {
    return {
        'alpha': !exists(json, 'alpha') ? undefined : json['alpha'],
        'blue': !exists(json, 'blue') ? undefined : json['blue'],
        'colorSpace': !exists(json, 'colorSpace') ? undefined : ColorSpaceFromJSON(json['colorSpace']),
        'green': !exists(json, 'green') ? undefined : json['green'],
        'red': !exists(json, 'red') ? undefined : json['red'],
        'rgb': !exists(json, 'rgb') ? undefined : json['rgb'],
        'transparency': !exists(json, 'transparency') ? undefined : json['transparency'],
    };
}

export function ColorToJSON(value?: Color): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'alpha': value.alpha,
        'blue': value.blue,
        'colorSpace': ColorSpaceToJSON(value.colorSpace),
        'green': value.green,
        'red': value.red,
        'rgb': value.rgb,
        'transparency': value.transparency,
    };
}


